#lang sicp

;;; copy the following forms in the REPL for ambiguous evaluator

(define (not x)
  (if x false true))

(define (require p)
  (if (not p) (amb)))

(define (member item items)
  (cond ((null? items) false)
        ((eq? item (car items)) items)
        (else (member item (cdr items)))))

(define (distinct? items)
  (cond ((null? items) true)
        ((null? (cdr items)) true)
        ((member (car items) (cdr items)) false)
        (else (distinct? (cdr items)))))

(define (a-father)
  (amb 'moore 'downing 'hall 'hood 'parker))

(define (a-daughter)
  (amb 'mary-ann 'gabrielle 'lorna 'rosalind 'melissa))

(define (daughters-and-yatches)
  (let ((moore-daughter (a-daughter))
        (moore-yatch (a-daughter)))
    (require (not (eq? moore-daughter moore-yatch)))
    (require (eq? moore-daughter 'mary-ann))
    (require (eq? moore-yatch 'lorna))
    (let ((downing-daughter (a-daughter))
          (downing-yatch (a-daughter)))
      (require (not (eq? downing-daughter downing-yatch)))
      (require (eq? downing-yatch 'melissa))
      (let ((hall-daughter (a-daughter))
            (hall-yatch (a-daughter)))
        (require (not (eq? hall-daughter hall-yatch)))
        (require (eq? hall-yatch 'rosalind))
        (let ((hood-daughter (a-daughter))
              (hood-yatch (a-daughter)))
          (require (not (eq? hood-daughter hood-yatch)))
          (require (eq? hood-daughter downing-yatch))
          (require (eq? hood-yatch 'gabrielle))
          (let ((parker-daughter (a-daughter))
                (parker-yatch (a-daughter)))
            (require (not (eq? parker-daughter parker-yatch)))
            (require (distinct? (list moore-daughter downing-daughter hall-daughter hood-daughter parker-daughter)))
            (require (distinct? (list moore-yatch downing-yatch hall-yatch hood-yatch parker-yatch)))
            (let ((gabrielle-father-yatch (cond ((eq? moore-daughter 'gabrielle) moore-yatch)
                                                ((eq? downing-daughter 'gabrielle) downing-yatch)
                                                ((eq? hall-daughter 'gabrielle) hall-yatch)
                                                ((eq? hood-daughter 'gabrielle) hood-yatch)
                                                ((eq? parker-daughter 'gabrielle) parker-yatch)
                                                (else (error "Invalid condition")))))
              (require (eq? parker-daughter gabrielle-father-yatch))
              (list (list 'moore moore-daughter moore-yatch)
                    (list 'downing downing-daughter downing-yatch)
                    (list 'hall hall-daughter hall-yatch)
                    (list 'hood hood-daughter hood-yatch)
                    (list 'parker parker-daughter parker-yatch)))))))))
